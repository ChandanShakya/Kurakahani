name: Podcast Automation

on:
  workflow_dispatch:
  issues:
    types:
      - labeled

jobs:
  automation:
    if: |
      github.event.issue.title == 'New Video' && 
      contains(github.event.issue.labels.*.name, 'New Video')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run automation script
        env:
          API_KEY: ${{ secrets.YOUR_YOUTUBE_API_KEY }}
        run: |
          python scripts/automation_script.py

      - name: Commit changes
        run: |
          git config --global user.name '${{ secrets.MAIN_USERNAME }}'
          git config --global user.email '${{ secrets.MAIN_EMAIL }}'
          git add .
          git commit -m "New Podcast"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload RSS Feed
        uses: actions/upload-artifact@v3
        with:
          name: rss-feed
          path: rss_feed.xml
  
      - name: Determine Next Release Number
        id: determine_release_number
        run: |
          release_number=$(( $(git tag -l | wc -l) + 1 ))
          echo "RELEASE_NUMBER=$release_number" >> $GITHUB_ENV
        
      - name: Create Release
        run: |
          response=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases" \
            -d '{
              "tag_name": "v'"${RELEASE_NUMBER}"'",
              "target_commitish": "main",
              "name": "Release v'"${RELEASE_NUMBER}"'",
              "body": "Release Notes"
            }')
          upload_url=$(echo "$response" | jq -r '.upload_url')
          upload_url="${upload_url%\{*}"
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @rss_feed.xml \
            "$upload_url?name=rss_feed.xml"

  archive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r archiver-requirements.txt

      - name: Archive Website
        run: |
          archiver --sitemaps https://kurakahani.github.io/sitemap.xml